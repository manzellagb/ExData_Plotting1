x <- c(17, 14, 4, 5, 13, 12, 10)
x[x<10]<-4
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]<-4
dev.cur()
dev.cur(2)
dev.set(2)
dev.set(2)
getwd()
setwd("C:/Users/gabri/Documents/ExData_Plotting1")
write.csv(newdata, "filtereddata.csv")
#import data
datadt<-read.table(file="./household_power_consumption.txt", sep=";", header=TRUE,
na.strings="?", stringsAsFactors = FALSE)
#change column names because it was giving me problems
colnames(datadt)[1:2]<-c("date_measured", "time_measured")
#convert it to a df
datadt<-as.data.frame(datadt)
#combine date and time objects into a datetime column
datadt$date_measured<-as.Date(datadt$date_measured, format="%d/%m/%Y")
datadt$datetime<-as.POSIXct(paste(datadt$date_measured, datadt$time_measured),
format="%Y-%m-%d %H:%M:%S")
newdata<-datadt[datadt$datetime >"2007-02-01" & datadt$datetime<"2007-02-03",]
newdata<-na.omit(newdata)
View(newdata)
write.csv(newdata, "filtereddata.csv")
#import data that was already filtered in plot1.R
datadt<-read.csv("./filtereddata.csv")
View(datadt)
rm(newdata)
rm(x)
with(datadt,
plot(Global_active_power, datetime,
main="Global Active Power", xlab="Global active power (killowatts)",
ylab="Frequency"))
?plot
plot(y=datadt$Global_active_power, x=datadt$datetime)
plot(y=datadt$Global_active_power, x=datadt$datetime)
plot(y=datadt$Global_active_power, x=datadt$datetime, type="n")
with(datadt,
plot(y=Global_active_power, x=datetime, type="n"),
lines(y=Global_active_power,x=datetime ))
with(datadt,
plot(y=Global_active_power, x=datetime, type="n"),
lines(y=Global_active_power,x=datetime ))
plot(y=datadt$Global_active_power, x=datadt$datetime, type="n")
plot(datadt$datetime, datadt$Global_active_power, type="n")
xs <- data.frame(x = 1:10, y = rnorm(10))
plot(xs$x, xs$y, type="n")
str(datadt)
datadt$datetime<-as.POSIXct(paste(datadt$date_measured, datadt$time_measured),
format="%Y-%m-%d %H:%M:%S")
plot(datadt$datetime, datadt$Global_active_power, type="n")
lines(y=datadt$Global_active_power,x=datadt$datetime )
with(datadt,
plot(datadt$datetime, datadt$Global_active_power, type="n"),
lines(y=datadt$Global_active_power,x=datadt$datetime ))
lines(y=datadt$Global_active_power,x=datadt$datetime )
Sys.setenv()
Sys.getenv()
Sys.setenv(LANG = "en")
plot(datadt$datetime, datadt$Global_active_power, type="n")
